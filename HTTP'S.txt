HTTP/1.1 vs HTTP/2
------------------
1.The first usable version of HTTP was created in 1997. Because it went through several stages of development, this version of HTTP was called HTTP/1.1.
In 2015, a new version of HTTP called HTTP/2 was created. HTTP/2 solves several problems that the creators of HTTP/1.1 did not anticipate.In particular, HTTP/2 is much faster and more efficient than HTTP/1.1.

2.Multiplexing: HTTP/1.1 loads resource cannot be loaded, it blocks all the other resources behind it. In contrast, HTTP/2 is able to us e a single TCP connection to send multiple streams of data at once so that no one resource blocks any other resource. HTTP/2 does this by spliting data into binary-code messages and numbering these messages so that the client knows which stream each binary message belongs to.

3.Server push: Typically, a serves content to a client device if the client asks for it. However, this approach is not practical for modern webpages,  which oftern involve several dozen seperate resources that the client must request.
HTTP/2 solves this problem by allowing a server to "push" content to a client before the client asks for it. The server also sends a message letting the client know what pushed content to expect like if BOB had sent Alice a table of contents of his novel before sending the whole thing.

4.Header compression: Small files files load more quickly than large ones. To speed up web performance, both HTTP/1.1 and HTTP/2 compress HTTP messages to make them smaller. However HTTP/2 uses a more advanced comprerssion method called HPACK that eliminates redundant information in HTTP header packets. This eliminates a few bytes from every HTTP packet. Given the volume of HTTP packets involved in loading even a single webpage, those bytes add up quickly, resulting in faster loading.

5.Prioritization:Prioritization refers to the order in which pieces of content are loaded. Priorotizztion affects a webpage's load time. For example, certain resources, like lareg javascript files, may block the rest of the page from loading if they have to load first. More of the page can load at once if these render-blocking resources load last. In HTTP/2, developers have hands-on, detailed control over prioritization. This allows them to maximize percerived and actual page load speed to a degree that was not possible in HTTP/1.1. HTTP/2 offers a feature called weighted prioritization. This allows developers to decide which page resources will load first, ever time.  


